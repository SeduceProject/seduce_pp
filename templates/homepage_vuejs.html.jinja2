{% extends "layout.html.jinja2" %}

{% block content %}

    <style>
        .status-badge {
            width: 50px;
            height: 50px;
        }
    </style>

    <div id="app" v-cloak>

        <main role="main" class="container">

            <div class="my-3 p-3 bg-white rounded shadow-sm">
                <div class="border-bottom border-gray pb-2 mb-0">
                    <div class="select-nodes">
                        <h6>Select your nodes: <span id="mynodes" class="node-list"></span></h6>
                    </div>
                    <a id="deploy-fct">
                        <div class="deploy-button">Deploy</div>
                    </a>
                </div>
                <div class="server-container">
                    <div v-for="s in servers" class="result square-resa" onclick="selectNode(this)"
                         v-bind:id=s.id>
                        <div>
                            <div>[[ s.name ]]</div>
                            <div>[[ s.ip ]]</div>
                            <div v-bind:class="[[ s.state ]]">[[ s.state.substring(0,18) ]]</div>
                            <div v-if="[[ s.state ]] == 'free'" class="deployment-name">Ready to deploy</div>
                            <div v-if="[[ s.state ]] != 'free'" class="deployment-name">[[ s.dname.substring(0,18) ]]</div>
                            <a v-if="[[ s.state ]] != 'free' && [[ s.state ]] != 'in_use'" :href="'/server/reboot/' + s.id" class="shell-link">Reboot</a>
                            <a v-if="[[ s.state ]] == 'deployed'" :href="'http://' + s.ip + ':8181'" target="_blank" class="shell-link">Console</a>
                        </div>
                    </div>
                </div>
            </div>
        </main>

        <main role="main" class="container">

            <div class="my-3 p-3 bg-white rounded shadow-sm">
                <h6 class="border-bottom border-gray pb-2 mb-0">Deployments</h6>

                <div v-for="deployment in user_deployments" class="media text-muted pt-3">
                    <div class="media-body pb-3 mb-0 small lh-125 border-bottom border-gray">
                        <div class="d-flex justify-content-between align-items-center w-100">
                            <h6 class="text-gray-dark">[[ deployment.name ]]: <span class="node-list">[[ deployment.server_names ]]</span></h6>
                            <div>
                                <a :href="'/deployment/destroy/' + deployment.ids">Destroy</a><br>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </main>
    </div>

    <script src="https://unpkg.com/vue"></script>

    <script>
        function selectNode(node) {
            var nodeState = node.children[0].children[2].className;
            if(nodeState != "in_use") {
                switch (nodeState) {
                    case "free":
                        node.children[0].children[2].className = "in_selection";
                        break;
                    case "in_selection":
                        node.children[0].children[2].className = "free";
                        break;
                }
                var mynodes = document.getElementsByClassName("in_selection");
                var names = "";
                var ids = "";

                Array.from(mynodes).forEach(function (n) {
                    names += n.parentNode.children[0].innerHTML + ", ";
                    ids += n.parentNode.parentNode.id + ",";
                });
                // Remove both the last space and the last comma
                names = names.substring(0, names.length - 2);
                // Remove the last comma
                ids = ids.substring(0, ids.length - 1);
                document.getElementById("mynodes").innerText = names;
                if (names.length == 0) {
                    document.getElementById("deploy-fct").setAttribute('href', "");
                } else {
                    document.getElementById("deploy-fct").setAttribute('href', "/server/take/" + ids+";"+names);
                }
            }
        }

        Vue.filter('formatDate', function (d) {
            if (!window.Intl) return d;
            return new Intl.DateTimeFormat('en-US').format(new Date(d));
        });

        const app = new Vue({
            el: '#app',
            data: {
                term: '',
                servers: [],
                user_deployments: [],
                noResults: false,
                loading: true
            },
            methods: {
                fetch_available_servers: function () {
                    fetch("{{ url_for("app_api.available_servers") }}")
                        .then(res => res.json())
                        .then(res => {
                            this.servers = res.server_info;
                        });
                },
                fetch_user_deployments: function () {
                    fetch("{{ url_for("app_api.user_deployments") }}")
                        .then(res => res.json())
                        .then(res => {
                            this.user_deployments = res.deployments;
                        });
                },
                reload_all_data: function () {
                    this.fetch_available_servers();
                    this.fetch_user_deployments();
                    this.loading = false;
                }
            },
            beforeMount: function () {
                this.reload_all_data();
                this.loading = true;
                setInterval(function () {
                    this.reload_all_data();
                }.bind(this), 5000);
            },
            delimiters: ['[[', ']]']
        });
    </script>
{% endblock %}