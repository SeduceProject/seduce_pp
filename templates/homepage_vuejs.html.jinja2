{% extends "layout.html.jinja2" %}

{% block content %}

    <style>
        .status-badge {
            width: 50px;
            height: 50px;
        }
    </style>

    <div id="app" v-cloak>
		<!-- Last update information -->
        <main role="main" class="container">
            <div class="my-3 p-3 bg-white rounded shadow-sm">
                <h4>Last update</h4>
                <h6>
                    The <b>Settings</b> panel allows you to register one SSH key associated to your user. This key will
                    be automatically deployed on your nodes.
                </h6>
            </div>
        </main>
		<!-- Node selection panel -->
        <main role="main" class="container">
            <div class="my-3 p-3 bg-white rounded shadow-sm">
                <div class="border-bottom border-gray pb-2 mb-0">
                    <div class="select-nodes">
                        <h6>Selected nodes (click on free nodes to select/unselect them):
                        <span id="mynodes" class="node-list"></span></h6>
                    </div>
                    <a id="deploy-fct">
                        <center><button type="button" class="btn btn-outline-info">Deploy</button></center>
                    </a>
                </div>
                <div class="server-container">
                    <div v-for="s in servers" class="result square-resa" onclick="selectNode(this)"
                         v-bind:id=s.id>
                        <div>
                            <div>[[ s.name ]]</div>
                            <div>[[ s.ip ]]</div>
                            <div class="progress position-relative" style="width: 90%; height: 24px; margin: auto;">
                                <div v-if="s.state != 'free'"
                                    v-bind:class="'progress-bar text-dark ' + [[ s.state ]]" role="progressbar"
                                    v-bind:style="'width: ' + [[ s.progress ]] + '%; font-size: 16px'"
                                    v-bind:aria-valuenow="[[ s.progress ]]" aria-valuemin="0" aria-valuemax="100">
                                    <span class="justify-content-center position-absolute w-100">
                                        [[ s.state.substring(0,18) ]]
                                    </span>
                                </div>
                                <div v-if="s.state == 'free'" class="progress-bar text-dark free"
                                    role="progressbar" style="width: 100%; font-size: 16px"
                                    aria-valuenow="100" aria-valuemin="0" aria-valuemax="100">
                                    [[ s.state.substring(0,18) ]]
                                </div>
                            </div>
                            <div v-if="s.state == 'free'" class="deployment-name">
                                Ready to deploy
                            </div>
                            <div v-if="s.state != 'free'" class="deployment-name">
                                [[ s.dname.substring(0,18) ]]
                            </div>
                            <div v-if="s.state == 'in_use'" class="deployment-name">
                                <a :href="'mailto:' + [[ s.email ]]">[[ s.email.substring(0,18) ]]</a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </main>

        <main role="main" class="container">
            <div class="my-3 p-3 bg-white rounded shadow-sm">
                <h6 class="border-bottom border-gray pb-2 mb-0">Deployments</h6>
                <div class="accordion" id="accordionExample">
                  <div v-for="deployment in user_deployments" class="card">
                    <div class="card-header bg-white" v-bind:id="'heading-' + [[ deployment.ids[0] ]]">
                        <div class="card-title">
                            [[ deployment.name ]]: <span class="node-list">[[ deployment.server_names ]]</span>
                        </div>
                        <div class="card-text text-center">
                            <a v-if="deployment.state != 'destroy_request' && deployment.state != 'destroying'"
                                :href="'/deployment/destroy/' + deployment.ids" class="btn btn-outline-danger btn-size">
                                Destroy
                            </a>
                            <a v-if="deployment.state != 'destroy_request' && deployment.state != 'destroying'" href="#"
                                class="shadow-none btn btn-outline-info btn-size" data-toggle="collapse"
                                v-bind:data-target="'#collapse-' + [[ deployment.ids[0] ]]" aria-expanded="true"
                                v-bind:aria-controls="'collapse-' + [[ deployment.ids[0] ]]">More Info</a>
                        </div>
                    </div>
                    <!-- More Info panel -->
                    <div v-bind:id="'collapse-' + [[ deployment.ids[0] ]]" class="collapse"
                        :aria-labelledby="'heading-' + [[ deployment.ids[0] ]]" data-parent="#accordionExample">
                      <div class="card-body text-center grey-border minfo">
                        <div class="container">
                            <div class="row">
                                <div class="col-3">
                                    <nav class="nav nav-pills flex-column">
                                        <div class="nav-link active"
                                            :onclick="'loadInfo(this,\'' + deployment.ids[0] + '\', \'\')'">
                                            Environment<br/>[[ deployment.ids.length ]] nodes
                                        </div>
                                        <div v-for="n in deployment.server_infos" class="nav-link"
                                            :onclick="'loadInfo(this, \''+ deployment.ids[0] + '\', \'' + n.name + '\')'">
                                            [[ n.name ]]
                                        </div>
                                    </nav>
                                </div>
                                <div :id="'container-info-' + [[ deployment.ids[0] ]]" class="col">
                                    <div :id="'env-info-' + [[ deployment.ids[0] ]]">
                                        <div class="bg-info text-light rounded minfo-title">Environment Configuration</div>
                                        <div class="container">
                                            <div class="row">
                                                <!-- Hard Reboot nodes -->
                                                <div class="col">
                                                    <a title='Turn off and on the node. This will reboot the node.'>
                                                        <div class='minfo-header'>
                                                            Hard Reboot
                                                        </div>
                                                    </a>
                                                    <div class="container">
                                                        <div v-for="n in deployment.server_infos" class="row">
                                                            <div :id="'hr-title-' + n.name" class="col">
                                                                [[ n.name ]]
                                                            </div>
                                                            <div class="col-1">
                                                                <input :id="'hr-' + n.name" class="form-check-input"
                                                                    type="checkbox">
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div><!-- COL -->
                                                <!-- Deploy again nodes -->
                                                <div class="col">
                                                    <a title='Deploy the environment again. This will erase all the existing data.'>
                                                        <div class='minfo-header'>
                                                            Deploy Again
                                                        </div>
                                                    </a>
                                                    <div class="container">
                                                        <div v-for="n in deployment.server_infos" class="row">
                                                            <div :id="'da-title-' + n.name" class="col">
                                                                [[ n.name ]]
                                                            </div>
                                                            <div class="col-1">
                                                                <input :id="'da-'+n.name" class="form-check-input" type="checkbox">
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div><!-- COL -->
                                                <!-- Release nodes -->
                                                <div class="col">
                                                    <a title='Take the node out of the deployment. The node will go back to the free state.'>
                                                        <div class='minfo-header'>
                                                            Release Nodes
                                                        </div>
                                                    </a>
                                                    <div class="container">
                                                        <div v-for="n in deployment.server_infos" class="row">
                                                            <div :id="'rn-title-' + n.name" class="col">
                                                                [[ n.name ]]
                                                            </div>
                                                            <div class="col-1">
                                                                <input :id="'rn-'+n.name" class="form-check-input" type="checkbox">
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div><!-- COL -->
                                            </div><!-- ROW -->
                                            <div class="row mt-4">
                                                <div class="col">
                                                    <button class="shadow-none btn btn-outline-dark minfo-button"
                                                    :onclick="'reconfigure(\'' + deployment.server_names + '\')'">Reconfigure</button>
                                                </div>
                                            </div>
                                        </div><!-- CONTAINER - ENV/NODE DETAILS -->
                                    </div>
                                    <!-- Node information -->
                                    <div v-for="n in deployment.server_infos" :id="n.name + '-info'" class="d-none">
                                        <div class="bg-info text-light rounded minfo-title">
                                            [[ n.name ]] Information
                                        </div>
                                        <div class="minfo-desc">
                                            <ul>
                                                <li v-for="info in n.desc">[[ info ]]</li>
                                            </ul>
                                        </div>
                                        <div class="container">
                                            <div class="row">
                                                <div class="col">
                                                    <div class="container minfo-table"><!-- required properties-->
                                                        <!-- title -->
                                                        <div class="row">
                                                            <div class="col">
                                                                Common Properties
                                                            </div>
                                                        </div>
                                                        <!-- STATE -->
                                                        <div class="row">
                                                            <div class="col">
                                                                State
                                                            </div>
                                                            <div :class="'col ' + n.state">
                                                                [[ n.state ]]
                                                            </div>
                                                        </div>
                                                        <!-- ENVIRONMENT -->
                                                        <div class="row">
                                                            <div class="col">
                                                                Environment
                                                            </div>
                                                            <div class="col">
                                                                [[ n.env ]]
                                                            </div>
                                                        </div>
                                                        <!-- IDENTIFIER -->
                                                        <div class="row">
                                                            <div class="col">
                                                                Identifier
                                                            </div>
                                                            <div :id="'id-' + n.name" class="col">
                                                                [[ n.id ]]
                                                            </div>
                                                        </div>
                                                        <!-- MODEL -->
                                                        <div class="row">
                                                            <div class="col">
                                                                Model
                                                            </div>
                                                            <div class="col">
                                                                [[ n.model ]]
                                                            </div>
                                                        </div>
                                                        <!-- WEB INTERFACE -->
                                                        <div class="row">
                                                            <div class="col">
                                                                Web Interface
                                                            </div>
                                                            <div class="col">
                                                                <a v-if="n.web_ui == false">None</a>
                                                                <a v-if="n.web_ui == true && n.state != 'deployed'">Installing...</a>
                                                                <a v-if="n.web_ui == true && n.state == 'deployed'"
                                                                :href="'http://' + n.public_ip" target="_blank">
                                                                    Web Interface
                                                                </a>
                                                            </div>
                                                        </div>
                                                    </div><!-- CONTAINER - required properties-->
                                                </div><!-- COL -->
                                                <div class="col">
                                                    <div class="container minfo-table"><!-- optional properties-->
                                                        <!-- title -->
                                                        <div class="row">
                                                            <div class="col">
                                                                Additional Properties
                                                            </div>
                                                        </div>
                                                        <div v-for="(prop in n.other_props" class="row">
                                                            <div class="col">
                                                                [[ prop[0] ]]
                                                            </div>
                                                            <div class="col">
                                                                [[ prop[1] ]]
                                                            </div>
                                                        </div>
                                                    </div><!-- CONTAINER - optional properties-->
                                                </div><!-- COL -->
                                            </div><!-- ROW -->
                                            <div class="row mt-3">
                                                <div class="col">
                                                    <div class="dropdown">
                                                      <button class="btn btn-outline-dark dropdown-toggle minfo-button" type="button"
                                                        id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true"
                                                        aria-expanded="false">
                                                        Show Password
                                                      </button>
                                                      <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                                                        <span class="dropdown-item">
                                                            [[ n.password ]]
                                                        </span>
                                                        <span :title="[[ n.password ]]" class="dropdown-item"
                                                            onclick="copyToClipboard(this)">
                                                            Copy to Clipboard
                                                        </span>
                                                      </div>
                                                    </div>
                                                </div>
                                                <div class="col">
                                                    <a :href="'/server/reboot/' + [[ n.name ]]"
                                                        class="shadow-none btn btn-outline-dark minfo-button">
                                                        Hard Reboot
                                                    </a>
                                                </div>
                                            </div>
                                            <div class="row mt-1">
                                                <div class="col">
                                                    <a :href="'/server/save_env/' + [[ n.name ]]"
                                                        class="shadow-none btn btn-outline-dark minfo-button">
                                                        Save Environment
                                                    </a>
                                                </div>
                                                <div class="col">
                                                    <a :href="'/server/redeploy/' + [[ n.name ]]"
                                                        class="shadow-none btn btn-outline-dark minfo-button">
                                                        Deploy Again
                                                    </a>
                                                </div>
                                            </div>
                                        </div><!-- CONTAINER - NODE-INFO -->
                                    </div>
                                </div>
                            </div><!-- ROW -->
                        </div>
                      </div><!-- CARDBODY -->
                    </div>
                  </div>
                </div>
                <div style="height: 60px;"></div>
            </div>
        </main>
    </div>
    <script src="{{ url_for("static", filename="js/vue") }}"></script>
    <script src="{{ url_for("static", filename="js/jquery-3.3.1.js") }}"></script>
    <script>
        function httpGet(api_endpoint) {
            var xmlHttp = new XMLHttpRequest();
            xmlHttp.open( "GET", api_endpoint, false ); // false for synchronous request
            xmlHttp.send( null );
            return xmlHttp.responseText;
        }

        function is_used(node_name, id_start, active_nodes) {
            var cbox = document.getElementById(id_start + '-' + node_name);
            if(cbox.checked) {
                if(active_nodes.allNodes().includes(node_name)) {
                    cbox.checked = false;
                    alert('ERROR: Node \'' + node_name + '\' is in more than one category.' + 
                    ' Only the first one will be considered.');
                } else {
                    active_nodes[id_start].push(node_name);
                }
            }
        }

        function reconfigure(node_list) {
            // Node Names
            var node_list = node_list.split(',');
            // HardReboot, DeployAgain, ReleaseNodes ID prefixes
            var prefix_id = [ 'hr', 'da', 'rn' ];
            // Nodes to reconfigure
            var used_nodes = {
                hr: [],
                da: [],
                rn: [],
                allNodes: function() {
                    return this.hr.concat(this.da).concat(this.rn);
                },
                uncheckNodes() {
                    // Uncheck the boxes
                    for(var p = 0; p < prefix_id.length; p++) {
                        selectedNodes = this[prefix_id[p]];
                        for(var i = 0; i < selectedNodes.length; i++) {
                            $('#' + prefix_id[p] + '-' + selectedNodes[i]).prop('checked', false);
                            $('#' + prefix_id[p] + '-title-' + selectedNodes[i]).fadeOut(
                                300,
                                function() {
                                    $(this).fadeIn(
                                        200
                                    ).removeClass('minfo-selected');
                                }
                            ).addClass('minfo-selected');
                        }
                    }
                },
                hardReboot: function() {
                    for(var i = 0; i < this.hr.length; i++) {
                        httpGet('/server/reboot/' + this.hr[i]);
                    }
                    this.hr = [];
                },
                deployAgain: function() {
                    for(var i = 0; i < this.da.length; i++) {
                        httpGet('/server/redeploy/' + this.da[i]);
                    }
                    this.da = [];
                },
                releaseNodes: function() {
                    for(var i = 0; i < this.rn.length; i++) {
                        httpGet('/server/release/' + this.rn[i]);
                    }
                    this.rn = [];
                }
            };
            // Add the selected nodes
            for(var i = 0; i < node_list.length; i++) {
                for(var p = 0; p < prefix_id.length; p++) {
                    is_used(node_list[i], prefix_id[p], used_nodes);
                }
            }
            used_nodes.uncheckNodes();
            // Send API requests
            used_nodes.hardReboot();
            used_nodes.deployAgain();
            used_nodes.releaseNodes();
        }

        function loadInfo(link, id_suffix, node) {
            link.parentNode.getElementsByClassName('active')[0].className = 'nav-link';
            link.className = 'nav-link active';
            document.getElementById('container-info-' + id_suffix).childNodes.forEach(div => {
                div.className = 'd-none';
            });
            if(node == '') {
                document.getElementById('env-info-' + id_suffix).className = 'd-block';
            } else {
                document.getElementById(node + '-info').className = 'd-block';
            }
        }

        function selectNode(node) {
            var nodeHTML = node.children[0].children[2].children[0]
            var nodeClass = nodeHTML.className;
            var nodeState = nodeClass.split(" ")[2]
            if(nodeState != "in_use") {
                switch (nodeState) {
                    case "free":
                        nodeHTML.className = nodeClass.replace(nodeState, "in_selection");
                        break;
                    case "in_selection":
                        nodeHTML.className = nodeClass.replace(nodeState, "free");
                        break;
                }
                var mynodes = document.getElementsByClassName("in_selection");
                var names = "";
                var ids = "";
                Array.from(mynodes).forEach(function (n) {
                    names += n.parentNode.parentNode.children[0].innerHTML + ", ";
                    ids += n.parentNode.parentNode.parentNode.id + ",";
                });
                // Remove both the last space and the last comma
                names = names.substring(0, names.length - 2);
                // Remove the last comma
                ids = ids.substring(0, ids.length - 1);
                document.getElementById("mynodes").innerText = names;
                if (names.length == 0) {
                    document.getElementById("deploy-fct").setAttribute('href', "");
                } else {
                    document.getElementById("deploy-fct").setAttribute('href', "/server/take/" + ids+";"+names);
                }
            }
        }
        
        function copyToClipboard(str) {
            const el = document.createElement('textarea');
            el.value = str.title;
            document.body.appendChild(el);
            el.select();
            document.execCommand('copy');
            document.body.removeChild(el);
            //alert('You can paste your password: ' + str.title)
        }

        Vue.filter('formatDate', function (d) {
            if (!window.Intl) return d;
            return new Intl.DateTimeFormat('en-US').format(new Date(d));
        });

        const app = new Vue({
            el: '#app',
            data: {
                term: '',
                servers: [],
                user_deployments: [],
                noResults: false,
                loading: true
            },
            methods: {
                fetch_available_servers: function () {
                    fetch("{{ url_for("app_api.available_servers") }}")
                        .then(res => res.json())
                        .then(res => {
                            this.servers = res.server_info;
                        });
                },
                fetch_user_deployments: function () {
                    fetch("{{ url_for("app_api.user_deployments") }}")
                        .then(res => res.json())
                        .then(res => {
                            this.user_deployments = res.deployments;
                        });
                },
                reload_all_data: function () {
                    this.fetch_available_servers();
                    this.fetch_user_deployments();
                    this.loading = false;
                }
            },
            beforeMount: function () {
                this.reload_all_data();
                this.loading = true;
                setInterval(function () {
                    this.reload_all_data();
                }.bind(this), 5000);
            },
            delimiters: ['[[', ']]']
        });
    </script>
{% endblock %}
