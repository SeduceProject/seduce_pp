{% extends "layout.html.jinja2" %}

{% block content %}

    <style>
        .status-badge {
            width: 50px;
            height: 50px;
        }
    </style>

    <div id="app" v-cloak>
        <main role="main" class="container">
            <div class="my-3 p-3 bg-white rounded shadow-sm">
                <h4>Last update</h4>
                <h6>
                    The <b>Settings</b> panel allows you to register one SSH key associated to your user. This key will
                    be automatically deployed on your nodes.
                </h6>
            </div>
        </main>
        <main role="main" class="container">
            <div class="my-3 p-3 bg-white rounded shadow-sm">
                <div class="border-bottom border-gray pb-2 mb-0">
                    <div class="select-nodes">
                        <h6>Selected nodes (click on free nodes to select/unselect them):
                        <span id="mynodes" class="node-list"></span></h6>
                    </div>
                    <a id="deploy-fct">
                        <center><button type="button" class="btn btn-outline-info">Deploy</button></center>
                    </a>
                </div>
                <div class="server-container">
                    <div v-for="s in servers" class="result square-resa" onclick="selectNode(this)"
                         v-bind:id=s.id>
                        <div>
                            <div>[[ s.name ]]</div>
                            <div>[[ s.ip ]]</div>
                            <div class="progress position-relative" style="width: 90%; height: 24px; margin: auto;">
                                <div v-if="[[ s.state ]] != 'free'"
                                    v-bind:class="'progress-bar text-dark ' + [[ s.state ]]" role="progressbar"
                                    v-bind:style="'width: ' + [[ s.progress ]] + '%; font-size: 16px'"
                                    v-bind:aria-valuenow="[[ s.progress ]]" aria-valuemin="0" aria-valuemax="100">
                                    <span class="justify-content-center position-absolute w-100">
                                        [[ s.state.substring(0,18) ]]
                                    </span>
                                </div>
                                <div v-if="[[ s.state ]] == 'free'" class="progress-bar text-dark free"
                                    role="progressbar" style="width: 100%; font-size: 16px"
                                    aria-valuenow="100" aria-valuemin="0" aria-valuemax="100">
                                    [[ s.state.substring(0,18) ]]
                                </div>
                            </div>
                            <div v-if="[[ s.state ]] == 'free'" class="deployment-name">
                                Ready to deploy
                            </div>
                            <div v-if="[[ s.state ]] != 'free'" class="deployment-name">
                                [[ s.dname.substring(0,18) ]]
                            </div>
                            <div v-if="[[ s.state ]] == 'in_use'" class="deployment-name">
                                <a :href="'mailto:' + [[ s.email ]]">[[ s.email.substring(0,18) ]]</a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </main>

        <main role="main" class="container">
            <div class="my-3 p-3 bg-white rounded shadow-sm">
                <h6 class="border-bottom border-gray pb-2 mb-0">Deployments</h6>
                <div class="accordion" id="accordionExample">
                  <div v-for="deployment in user_deployments" class="card">
                    <div class="card-header bg-white" v-bind:id="'heading-' + [[ deployment.ids[0] ]]">
                        <div class="card-title">
                            [[ deployment.name ]]: <span class="node-list">[[ deployment.server_names ]]</span>
                        </div>
                        <div class="card-text text-center">
                            <a v-if="[[ deployment.state ]] != 'destroy_request' &&
                                [[ deployment.state ]] != 'destroying'" :href="'/deployment/destroy/' + deployment.ids"
                                class="btn btn-outline-danger btn-size">Destroy</a>
                            <a v-if="[[ deployment.state ]] != 'destroy_request' &&
                                [[ deployment.state ]] != 'destroying'" href="#"
                                class="shadow-none btn btn-outline-info btn-size" data-toggle="collapse"
                                v-bind:data-target="'#collapse-' + [[ deployment.ids[0] ]]" aria-expanded="true"
                                v-bind:aria-controls="'collapse-' + [[ deployment.ids[0] ]]">More Info</a>
                        </div>
                    </div>
                    <div v-bind:id="'collapse-' + [[ deployment.ids[0] ]]" class="collapse"
                        :aria-labelledby="'heading-' + [[ deployment.ids[0] ]]" data-parent="#accordionExample">
                      <div class="card-body text-center grey-border">
                            <h5 class="table-title">Environment Information</h5>
							<table class="table text-center">
							  <thead>
								<tr>
								  <th scope="col">Environment</th>
								  <th scope="col">SSH with Password</th>
								  <th scope="col">SSH with ssh key</th>
                                </tr>
							  </thead>
							  <tbody>
									<tr>
										<td>[[ deployment.env ]]</td>
										<td v-if="[[ deployment.env ]] != 'tiny_core'">
                                            ssh -l pi -p <i>public_port</i> <i>public_ip</i>
                                        </td>
										<td v-if="[[ deployment.env ]] == 'tiny_core'">
                                            ssh -l tc -p <i>public_port</i> <i>public_ip</i>
                                        </td>
										<td v-if="[[ deployment.env ]] != 'tiny_core'">
                                            ssh -l root -p <i>public_port</i> <i>public_ip</i>
                                        </td>
										<td v-if="[[ deployment.env ]] == 'tiny_core'">
                                            ssh -l tc -p <i>public_port</i> <i>public_ip</i>
                                        </td>
                                    </tr>
									<tr>
										<td>
                                            <span v-if="[[ deployment.env ]] != 'raspbian_cloud9' &&
                                                [[ deployment.env ]] != 'raspbian_jupyter'">
                                                No web interface
                                            </span>
                                            <div v-if="[[ deployment.env ]] == 'raspbian_cloud9'" class="dropdown">
                                              <button class="btn btn-outline-dark dropdown-toggle" type="button"
                                                id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true"
                                                aria-expanded="false">
                                                C9 Interface
                                              </button>
                                              <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
									            <span v-for="n in deployment.server_infos"
                                                    v-if="[[ n.state ]] != 'deployed'" class="dropdown-item">
                                                    Waiting [[ n.name ]]
                                                </span>
									            <a v-for="n in deployment.server_infos"
                                                    v-if="[[ n.state ]] == 'deployed'" :href="'http://' + n.public_ip"
                                                    target="_blank" class="dropdown-item">
                                                    [[ n.name ]]
                                                </a>
                                              </div>
                                            </div>
                                            <div v-if="[[ deployment.env ]] == 'raspbian_jupyter'" class="dropdown">
                                              <button class="btn btn-outline-dark dropdown-toggle" type="button"
                                                id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true"
                                                aria-expanded="false">
                                                Jupyter Interface
                                              </button>
                                              <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
									            <span v-for="n in deployment.server_infos"
                                                    v-if="[[ n.state ]] != 'deployed'" class="dropdown-item">
                                                    Waiting [[ n.name ]]
                                                </span>
									            <a v-for="n in deployment.server_infos"
                                                    v-if="[[ n.state ]] == 'deployed'" :href="'http://' + n.public_ip"
                                                    target="_blank" class="dropdown-item">
                                                    [[ n.name ]]
                                                </a>
                                              </div>
                                            </div>
                                        </td>
										<td>
                                            <div class="dropdown">
                                              <button class="btn btn-outline-dark dropdown-toggle" type="button"
                                                id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true"
                                                aria-expanded="false">
                                                Deploy again
                                              </button>
                                              <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
									            <a v-for="n in deployment.server_infos"
                                                    :href="'/server/redeploy/' + [[ n.id ]]" target="_blank"
                                                    class="dropdown-item">
                                                    [[ n.name ]]
                                                </a>
                                              </div>
                                            </div>
                                        </td>
										<td>
                                            <div class="dropdown">
                                              <button class="btn btn-outline-dark dropdown-toggle" type="button"
                                                id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true"
                                                aria-expanded="false">
                                                Hard Reboot
                                              </button>
                                              <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
									            <a v-for="n in deployment.server_infos"
                                                    :href="'/server/reboot/' + [[ n.id ]]" target="_blank"
                                                    class="dropdown-item">
                                                    [[ n.name ]]
                                                </a>
                                              </div>
                                            </div>
                                        </td>
                                    </tr>
                              </tbody>
                            </table>
                            <h5 class="table-title">Node Information</h5>
							<table class="table">
							  <thead>
								<tr>
								  <th scope="col">Name</th>
								  <th scope="col">Identifier</th>
								  <th scope="col">Private IP</th>
								  <th scope="col">Public IP</th>
								  <th scope="col">Public port</th>
								  <th scope="col">Model</th>
                                  <th scope="col">Password</th>
								  <th scope="col">State</th>
								</tr>
							  </thead>
							  <tbody>
									<tr v-for="n in deployment.server_infos">
										<th scope="row">[[ n.name ]]</td>
										<td>[[ n.id ]]</td>
										<td>[[ n.ip ]]</td>
										<td>[[ n.public_ip ]]</td>
										<td>[[ n.public_port ]]</td>
										<td>[[ n.model ]]</td>
                                        <td>
                                            <div class="dropdown">
                                              <button class="btn btn-outline-dark dropdown-toggle" type="button"
                                                id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true"
                                                aria-expanded="false">
                                                Show
                                              </button>
                                              <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                                                <span class="dropdown-item">
                                                    [[ n.password ]]
                                                </span>
                                                <span :title="[[ n.password ]]" class="dropdown-item"
                                                    onclick="copyToClipboard(this)">
                                                    Copy to Clipboard
                                                </span>
                                              </div>
                                            </div>
                                        </td>
                                        <td>[[ n.state ]]</td>
										<td>
										</td>
									</tr>
							  </tbody>
							</table>
                      </div>
                    </div>
                  </div>
                </div>
                <div style="height: 60px;"></div>
            </div>
        </main>
    </div>
    <script src="{{ url_for("static", filename="js/vue") }}"></script>
    <script>
        function selectNode(node) {
            var nodeHTML = node.children[0].children[2].children[0]
            var nodeClass = nodeHTML.className;
            var nodeState = nodeClass.split(" ")[2]
            if(nodeState != "in_use") {
                switch (nodeState) {
                    case "free":
                        nodeHTML.className = nodeClass.replace(nodeState, "in_selection");
                        break;
                    case "in_selection":
                        nodeHTML.className = nodeClass.replace(nodeState, "free");
                        break;
                }
                var mynodes = document.getElementsByClassName("in_selection");
                var names = "";
                var ids = "";
                Array.from(mynodes).forEach(function (n) {
                    names += n.parentNode.parentNode.children[0].innerHTML + ", ";
                    ids += n.parentNode.parentNode.parentNode.id + ",";
                });
                // Remove both the last space and the last comma
                names = names.substring(0, names.length - 2);
                // Remove the last comma
                ids = ids.substring(0, ids.length - 1);
                document.getElementById("mynodes").innerText = names;
                if (names.length == 0) {
                    document.getElementById("deploy-fct").setAttribute('href', "");
                } else {
                    document.getElementById("deploy-fct").setAttribute('href', "/server/take/" + ids+";"+names);
                }
            }
        }
        
        function copyToClipboard(str) {
            const el = document.createElement('textarea');
            el.value = str.title;
            document.body.appendChild(el);
            el.select();
            document.execCommand('copy');
            document.body.removeChild(el);
            //alert('You can paste your password: ' + str.title)
        }

        Vue.filter('formatDate', function (d) {
            if (!window.Intl) return d;
            return new Intl.DateTimeFormat('en-US').format(new Date(d));
        });

        const app = new Vue({
            el: '#app',
            data: {
                term: '',
                servers: [],
                user_deployments: [],
                noResults: false,
                loading: true
            },
            methods: {
                fetch_available_servers: function () {
                    fetch("{{ url_for("app_api.available_servers") }}")
                        .then(res => res.json())
                        .then(res => {
                            this.servers = res.server_info;
                        });
                },
                fetch_user_deployments: function () {
                    fetch("{{ url_for("app_api.user_deployments") }}")
                        .then(res => res.json())
                        .then(res => {
                            this.user_deployments = res.deployments;
                        });
                },
                reload_all_data: function () {
                    this.fetch_available_servers();
                    this.fetch_user_deployments();
                    this.loading = false;
                }
            },
            beforeMount: function () {
                this.reload_all_data();
                this.loading = true;
                setInterval(function () {
                    this.reload_all_data();
                }.bind(this), 5000);
            },
            delimiters: ['[[', ']]']
        });
    </script>
{% endblock %}
